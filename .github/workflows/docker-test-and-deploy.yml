name: Docker Build, Test & Deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test-client:
    runs-on: ubuntu-latest
    name: Test Client
    steps:
      - uses: actions/checkout@v2
      - name: Build the Client Docker image
        run: docker build -t cadubentzen/react-test -f ./client/Dockerfile.dev ./client
      - name: Test Client
        run: docker run -e CI=true cadubentzen/react-test npm run test

  # There is a flow with the following matrix:
  # one image can be built and published before another one fails,
  # so we potentially have a partial deployment. How to fix this nicely
  # without building all the images sequentially in the same job
  # or having a build-only job followed by build + deploy? ðŸ¤”
  prod-build-and-publish:
    if: github.ref == 'refs/heads/master'
    strategy:
      matrix:
        component: [client, nginx, server, worker]
    concurrency: ${{ matrix.component }}
    runs-on: ubuntu-latest
    name: Build and publish prod ${{ matrix.component }}
    needs: test-client
    steps:
      - uses: actions/checkout@v2
      - name: Build production image for ${{ matrix.component }}
        run: docker build -t cadubentzen/multi-${{ matrix.component }} ./${{ matrix.component }}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish ${{ matrix.component }}
        run: docker push cadubentzen/multi-${{ matrix.component }}

  prod-deploy-eb:
    if: github.ref == 'refs/heads/master'
    needs: prod-build-and-publish
    concurrency: eb
    runs-on: ubuntu-latest
    name: Deploy to Elastic Beanstalk
    steps:
      - uses: actions/checkout@v2
      - name: Generate deployment package
        run: zip deploy.zip docker-compose.yml
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: eu-west-1
          application_name: multi-docker
          environment_name: Multidocker-env
          version_label: ${{ github.sha }}
          existing_bucket_name: elasticbeanstalk-eu-west-1-462787720787
          deployment_package: deploy.zip
